# Default values for ssv-node.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

podManagementPolicy: Parallel

image:
  repository: bloxstaking/ssv-node
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

updateStrategyType: RollingUpdate

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
serviceName: ""
dnsDomain: ""

extraArgs: {}

config:
  global:
    LogLevel: "info"
  MetricsAPIPort: 15000
  db:
    Path: "/data"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  peering:
    enableHostPort: true
    tcp:
      port: 13000
    udp:
      port: 12000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}
#  role: ethereum

tolerations: []
#  - key: "dedicated"
#    operator: "Equal"
#    value: "ethereum"
#    effect: "NoSchedule"

affinity: {}

persistence:
  enabled: true
  accessMode: ReadWriteOnce
  # storageClass: ""
  # existingClaim: ""
  size: 5Gi

serviceMonitor:
  enabled: false
  additionalLabels: {}
  namespace: ""
  namespaceSelector: {}
  # Default: scrape .Release.Namespace only
  # To scrape all, use the following:
  # namespaceSelector:
  #   any: true
  scrapeInterval: 60s
  # honorLabels: true
  targetLabels: []
  metricRelabelings: []

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
