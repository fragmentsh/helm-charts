# Default values for erigon.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: thorax/erigon
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  runAsUser: 0
  runAsGroup: 0
  fsGroup: 0

erigon:

  enabled: true

  datadir: /home/erigon/.local/share/erigon

  defaultArgs:
    - --metrics
    - --metrics.addr=0.0.0.0
    - --metrics.port=6060
    - --private.api.addr=0.0.0.0:9090
    - --pprof
    - --pprof.addr=0.0.0.0
    - --pprof.port=6061

  extraArgs: {}

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  securityContext:
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000


rpcdaemon:

  enabled: true

  defaultArgs:
    - --private.api.addr=localhost:9090
    - --http.addr=0.0.0.0
    - --http.corsdomain="*"
    - --http.vhosts="*"
    - --http.api="eth,erigon,net,web3"

  extraArgs: {}

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  securityContext:
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

service:
  p2p:
    enableHostPort: true
    port: 30303
    portEth65: 30304

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []
  #  - key: "dedicated"
  #    operator: "Equal"
  #    value: "ethereum"
  #    effect: "NoSchedule"

affinity: {}

persistence:
  enabled: true
  accessMode: ReadWriteOnce
  # storageClass: ""
  # existingClaim: ""
  size: 1Ti

serviceMonitor:
  enabled: false
  additionalLabels: {}
  namespace: ""
  namespaceSelector: {}
  # Default: scrape .Release.Namespace only
  # To scrape all, use the following:
  # namespaceSelector:
  #   any: true
  scrapeInterval: 60s
  # honorLabels: true
  targetLabels: []
  metricRelabelings: []
  path: /debug/metrics/prometheus
