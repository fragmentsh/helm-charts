---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "aptos-validator.fullname" . }}-validator
  labels:
    {{- include "aptos-validator.labels" . | nindent 4 }}
    app.kubernetes.io/name: validator
spec:
  serviceName: {{ include "aptos-validator.fullname" . }}-validator
  replicas: 1
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      {{- include "aptos-validator.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/name: validator
  template:
    metadata:
      labels:
        {{- include "aptos-validator.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/name: validator
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        checksum/validator.yaml: {{ tpl (.Files.Get "files/configs/validator.yaml") . | sha256sum }}
    spec:
      terminationGracePeriodSeconds: 0
      containers:
      - name: validator
        image: {{ .Values.validator.image.repo }}:{{ .Values.validator.image.tag | default .Values.imageTag }}
      {{- with .Values.validator }}
        imagePullPolicy: {{ .image.pullPolicy }}
        command: ["/opt/aptos/bin/aptos-node", "-f", "/opt/aptos/etc/validator.yaml"]
        resources:
          {{- toYaml .resources | nindent 10 }}
        env:
        - name: RUST_LOG
          value: {{ .rust_log }}
        - name: RUST_LOG_REMOTE
          value: {{ .rust_log_remote }}
      {{- end }}
        - name: RUST_BACKTRACE
          value: "1"
        volumeMounts:
        - name: aptos-config
          mountPath: /opt/aptos/etc
        - name: genesis-config
          mountPath: /opt/aptos/genesis
        - name: aptos-data
          mountPath: /opt/aptos/data
        ports:
        - containerPort: 6180
        - containerPort: 6181  # VFN
        - containerPort: 6182  # Public
        - containerPort: 8080
        - containerPort: 9101
        livenessProbe:
          tcpSocket:
            port: 9101
          initialDelaySeconds: 30
        readinessProbe:
          tcpSocket:
            port: 6180
        securityContext:
          {{- if $.Values.enablePrivilegedMode }}
          privileged: true
          {{- else }}
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          {{- end }}
      {{- with .Values.validator }}
      {{- with .nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 6180
        runAsGroup: 6180
        fsGroup: 6180
      {{- end }}
      volumes:
      - name: aptos-config
        configMap:
          name: {{ include "aptos-validator.fullname" . }}
      - name: genesis-config
        secret:
          secretName: {{ include "aptos-validator.fullname" . }}-genesis-e{{ .Values.chain.era }}
      - name: aptos-data
        persistentVolumeClaim:
          claimName: {{ include "aptos-validator.fullname" . }}-validator-e{{ .Values.chain.era }}
      serviceAccountName: {{ include "aptos-validator.fullname" . }}-validator
      {{- if .Values.imagePullSecret }}
      imagePullSecrets:
      - name: {{.Values.imagePullSecret}}
      {{- end }}
